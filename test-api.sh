#!/bin/bash

echo "üöÄ Tests de l'API Fastify"
echo "========================="
echo ""

BASE_URL="http://localhost:3000"

# 1. Signup
echo "1Ô∏è‚É£  Test Signup (cr√©ation de compte)..."
SIGNUP_RESPONSE=$(curl -s -X POST $BASE_URL/signup \
  -H "Content-Type: application/json" \
  -d '{"email":"test@example.com","password":"password123","username":"testuser"}')

echo "R√©ponse: $SIGNUP_RESPONSE"
echo ""

# 2. Login et r√©cup√©ration du token
echo "2Ô∏è‚É£  Test Login (connexion)..."
LOGIN_RESPONSE=$(curl -s -X POST $BASE_URL/login \
  -H "Content-Type: application/json" \
  -d '{"email":"test@example.com","password":"password123"}')

# Extraire le token (simple grep)
TOKEN=$(echo $LOGIN_RESPONSE | grep -o '"token":"[^"]*' | cut -d'"' -f4)
echo "R√©ponse: $LOGIN_RESPONSE"
echo ""
echo "üîë Token r√©cup√©r√©: $TOKEN"
echo ""

# 3. Cr√©er un post SANS token (doit √©chouer)
echo "3Ô∏è‚É£  Test POST /posts SANS token (doit √©chouer avec 401)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST $BASE_URL/posts \
  -H "Content-Type: application/json" \
  -d '{"title":"Mon post","content":"Contenu","published":true}')

echo "$RESPONSE"
echo ""

# 4. Cr√©er un post AVEC token (doit r√©ussir)
echo "4Ô∏è‚É£  Test POST /posts AVEC token (doit r√©ussir avec 201)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST $BASE_URL/posts \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"title":"Mon premier post","content":"Contenu du post","published":true}')

echo "$RESPONSE"
echo ""

# 5. Cr√©er un autre post avec MAUVAIS token (doit √©chouer)
echo "5Ô∏è‚É£  Test POST /posts avec MAUVAIS token (doit √©chouer avec 401)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST $BASE_URL/posts \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer faux_token_invalide_123" \
  -d '{"title":"Un autre post","content":"Contenu","published":true}')

echo "$RESPONSE"
echo ""

# 6. R√©cup√©rer tous les posts (route publique)
echo "6Ô∏è‚É£  Test GET /posts (route publique, sans token)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" $BASE_URL/posts)
echo "$RESPONSE"
echo ""

# 7. Voir mon profil SANS token (doit √©chouer)
echo "7Ô∏è‚É£  Test GET /me SANS token (doit √©chouer avec 401)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" $BASE_URL/me)
echo "$RESPONSE"
echo ""

# 8. Voir mon profil AVEC token (doit r√©ussir)
echo "8Ô∏è‚É£  Test GET /me AVEC token (doit r√©ussir avec 200)..."
RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" $BASE_URL/me \
  -H "Authorization: Bearer $TOKEN")

echo "$RESPONSE"
echo ""

echo "‚úÖ Tests termin√©s !"
echo ""
echo "üìù R√©sum√©:"
echo "- Routes publiques (signup, login, GET posts) : fonctionnent sans token"
echo "- Routes prot√©g√©es (POST/PUT/DELETE posts, /me) : n√©cessitent un token"
echo "- Token invalide ou absent : erreur 401"

